package ContextForest;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.ButtonGroup;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

import moduls.frm.FrmPrincipalDesk;

public class ChooseCompareTree extends JDialog implements ActionListener, PropertyChangeListener{
	
	//FIELDS
	
	//master
	private FrmPrincipalDesk f;
	
	//GUI
	private JPanel jp;
	private JLabel LblTree, LblParameters;
	private String strLblTree = " REFERENCE TREE:";
	private String strLblParameters = " SCANNING PARAMETERS:";
	
	private JRadioButton rbLoadedTree, rbQueryTree;
	private String strLoadedTree = "Loaded Phylogenetic Tree:";
	private String strQueryTree = "Context Tree, generated by Query:";
	private ButtonGroup bg;
	
	//Insets
	private Insets lblIns = new Insets(3,3,3,3);
	private Insets rbIns = new Insets(1,5,1,1);
	private Insets indIns = new Insets(1,20,1,1);
	private Insets basIns = new Insets(1,1,1,1);
	
	//CONSTRUCTOR
	public ChooseCompareTree(FrmPrincipalDesk f){
		this.f = f;
		
		//create components
		this.getPanel();
		this.getFrame();
		
		
		//Last step: make window visible
		this.setVisible(true);
	}
	
	// ======= GUI Methods ====== //
	
	//panel
	public void getPanel(){
		
		//initial GridBagLayout parameters
		jp = new JPanel();
		jp.setLayout(new GridBagLayout());
		final GridBagConstraints c = new GridBagConstraints();
		int gridy = 0;
		c.weightx = 1;
		c.insets = new Insets(2,2,2,2);
		
		/*
		 * COMPARISON TREE
		 */
		
		//Label
		c.gridx = 0;
		c.gridy = gridy;
		c.gridheight = 1;
		c.insets = lblIns;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.gridwidth = 6;
		LblTree = new JLabel(strLblTree);
		LblTree.setBackground(Color.GRAY);
		LblTree.setOpaque(true);
		jp.add(LblTree,c);
		gridy++;
		
		//create button group
		bg = new ButtonGroup();
		rbLoadedTree = new JRadioButton(strLoadedTree);
		rbQueryTree = new JRadioButton(strQueryTree);
		bg.add(rbLoadedTree);
		bg.add(rbQueryTree);
		
		//Loaded Tree RB
		c.gridx = 0;
		c.gridy = gridy;
		c.gridheight = 1;
		c.insets = rbIns;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.gridwidth = 2;
		jp.add(rbLoadedTree, c);
		
		//Select from drop-down menu
		
		
		gridy++;
		
		//Generated Tree RB
		c.gridx = 0;
		c.gridy = gridy;
		c.gridheight = 1;
		c.insets = rbIns;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.gridwidth = 2;
		jp.add(rbQueryTree, c);
		
		//Enter Query box
		
		gridy++;
		/*
		 * SCANNING PARAMETERS
		 */
		
		//Label
		c.gridx = 0;
		c.gridy = gridy;
		c.gridheight = 1;
		c.insets = lblIns;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.gridwidth = 6;
		LblParameters = new JLabel(strLblParameters);
		LblParameters.setBackground(Color.GRAY);
		LblParameters.setOpaque(true);
		jp.add(LblParameters,c);
		gridy++;
		
		this.add(jp);
		
	}
	
	//frame
	public void getFrame(){
		this.setSize(400,400);
		this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setTitle("Select Tree and Query Set");
		this.setResizable(true);
	}
	
	// ======= Listeners ====== //
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {

	}

	@Override
	public void actionPerformed(ActionEvent e) {

	}
}
